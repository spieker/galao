(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by CoffeeScript 1.9.0
require('./galao/number');

require('./galao/string');

},{"./galao/number":2,"./galao/string":3}],2:[function(require,module,exports){
// Generated by CoffeeScript 1.9.0
var _base, _base1, _base2, _base3, _base4, _base5, _base6, _base7;

if ((_base = Number.prototype).second == null) {
  _base.second = function() {
    return this.seconds();
  };
}

if ((_base1 = Number.prototype).seconds == null) {
  _base1.seconds = function() {
    return this * 1000;
  };
}

if ((_base2 = Number.prototype).minute == null) {
  _base2.minute = function() {
    return this.minutes();
  };
}

if ((_base3 = Number.prototype).minutes == null) {
  _base3.minutes = function() {
    return this.seconds() * 60;
  };
}

if ((_base4 = Number.prototype).hour == null) {
  _base4.hour = function() {
    return this.hours();
  };
}

if ((_base5 = Number.prototype).hours == null) {
  _base5.hours = function() {
    return this.minutes() * 60;
  };
}

if ((_base6 = Number.prototype).day == null) {
  _base6.day = function() {
    return this.days();
  };
}

if ((_base7 = Number.prototype).days == null) {
  _base7.days = function() {
    return this.hours() * 24;
  };
}

},{}],3:[function(require,module,exports){
// Generated by CoffeeScript 1.9.0
var _base, _base1, _base2, _base3;

if ((_base = String.prototype).capitalize == null) {
  _base.capitalize = function() {
    if (!(this.length > 0)) {
      return '';
    }
    return this[0].toUpperCase() + this.slice(1);
  };
}

if ((_base1 = String.prototype).startsWith == null) {
  _base1.startsWith = function(prefix) {
    return this.indexOf(prefix) === 0;
  };
}

if ((_base2 = String.prototype).endsWith == null) {
  _base2.endsWith = function(suffix) {
    return this.indexOf(suffix) === this.length - suffix.length;
  };
}

if ((_base3 = String.prototype).repeat == null) {
  _base3.repeat = function(n) {
    var res, str;
    str = this;
    res = '';
    while (n > 0) {
      if (n & 1) {
        res += str;
      }
      n >>>= 1;
      str += str;
    }
    return res;
  };
}

},{}]},{},[1]);
